/*고속도로 휴게소의 규모와 주차장 현황을 함께 출력*/
use my_sql;
select * from rest_area_score;
select * from rest_area_parking;

select a.휴게소명,a.시설구분, b.합계,b.대형,b.소형,b.장애인
from rest_area_score a left outer join rest_area_parking b
    on a.휴게소명=b.휴게소명
union
select b.휴게소명,a.시설구분, b.합계,b.대형,b.소형,b.장애인
  from rest_area_parking b left outer join rest_area_score a
    on a.휴게소명=b.휴게소명;

/*규모와 화장실 현황을 함께 출력*/
select * from rest_area_restroom;

select a.휴게소명,a.시설구분, c.남자_변기수,c.여자_변기수
from rest_area_score a left outer join rest_area_restroom c
    on a.휴게소명=c.시설명
union
select c.시설명,a.시설구분, c.남자_변기수,c.여자_변기수
  from rest_area_restroom c left outer join rest_area_score a
    on a.휴게소명=c.시설명;

/* 규모, 주차장, 화장실 현황을 함께 출력*/
select distinct a.휴게소명,a.시설구분, b.합계, c.남자_변기수,c.여자_변기수
  from rest_area_score a,rest_area_parking b,rest_area_restroom c
where a.휴게소명=b.휴게소명
  and b.휴게소명=c.시설명;

 /* 규모별로 주차장수 합계의 평균, 최솟값, 최댓값 출력*/
select a.휴게소명, a.시설구분,
       avg(b.합계) over(partition by a.시설구분) as avg_parking,
       min(b.합계) over(partition by a.시설구분) as min_parking,
       max(b.합계) over(partition by a.시설구분) as max_parking
  from rest_area_score a,rest_area_parking b
    where a.휴게소명=b.휴게소명;

 /*만족도별로 대형 주차장수가 가장 많은 휴게소만 출력*/
 select t.휴게소명, t.평가등급,t.대형
 from(
 select a.휴게소명, a.평가등급,b.대형,
       rank() over(partition by a.평가등급 order by b.대형 desc) as rnk
 from rest_area_score a inner join rest_area_parking b
    on a.휴게소명=b.휴게소명
 ) t
 where rnk=1;
 
 /*노선별 남녀 변기수 최대값 출력*/
 select * from rest_area_restroom;
 
select 노선,max(남자_변기수),max(여자_변기수)
from rest_area_restroom
group by 노선;

  /*휴게소 중 총 변기수가 가장 많은 휴게소*/

select distinct 시설명,남자_변기수+여자_변기수 as tt
 from rest_area_restroom
order by tt desc
limit 1;
 
 /*노선별 남녀 변기수 평균*/
select 노선,round(avg(남자_변기수)), round(avg(여자_변기수))
from rest_area_restroom
group by 노선;

 /*노선별 총 변기수가 가장 많은곳*/
select t.노선,t.시설명,t.tt
from(
select distinct 노선,시설명,남자_변기수+여자_변기수 as tt,
rank() over(partition by 노선 order by 남자_변기수+여자_변기수 desc) as rnk
 from rest_area_restroom
) t 
 where t.rnk=1;
 
 /*노선별 남 변기수가 더 많은 곳, 여 변기수가 더 많은 곳,변기수 동일한 곳의 count를 구하여 출력*/
 select  노선,
        count(case when 남자_변기수 > 여자_변기수 then 1 end) as male,
        count(case when 남자_변기수 < 여자_변기수 then 1 end) as female,
        count(case when 남자_변기수 = 여자_변기수 then 1 end) as equal
  from (
    SELECT DISTINCT 노선, 남자_변기수, 여자_변기수
    FROM rest_area_restroom
) AS sub
  group by 노선;
 
 /*평가등급이 최우수인 휴게소의 장애인 주차장수 출력*/
select  * from rest_area_parking;

 select a.휴게소명,a.시설구분,b.장애인
  from rest_area_score a left outer join rest_area_parking b
 on a.휴게소명=b.휴게소명
 where a.평가등급='최우수'
 order by b.장애인 desc;
 
 /*평가등급이 우수인 휴게소의 장애인 주차장수 비율 출력*/
 select a.휴게소명,a.시설구분,round((b.장애인/b.합계)*100,2) as 비율
  from rest_area_score a left outer join rest_area_parking b
 on a.휴게소명=b.휴게소명
 where a.평가등급='우수'
 order by (b.장애인/b.합계)*100 desc;
 
 /*휴게소의 시설구분별 주차장수 합계의 평균 출력*/
 select distinct a.시설구분,avg(b.합계) over(partition by a.시설구분) as avg_parking
 from rest_area_score a inner join rest_area_parking b
 on a.휴게소명=b.휴게소명;
 
 select a.시설구분,avg(b.합계)
 from rest_area_score 
 a , rest_area_parking b
 where a.휴게소명=b.휴게소명
 group by a.시설구분;
 
 /*노선별로 대형차를 가장 많이 주차할 수 있는 휴게소 top3*/
 select t.노선,t.휴게소명, t.대형
 from (
 select distinct 노선,휴게소명, 대형 ,
 rank() over(partition by 노선 order by 대형 desc) as rnk
 from rest_area_parking
 ) as t 
 where t.rnk <4;
 
 /*본부별 소형차를 가장 많이 주차할 수 있는 휴게소 top3*/
 select t.본부,t.휴게소명,t.소형
 from(
 select 본부,휴게소명,소형,rank() over(partition by 본부 order by 소형 desc) as rnk
 from rest_area_parking
 ) as t
 where rnk<4;
 
 /*반려동물 놀이터가 있는 휴게소 중 와이파이 사용 가능한 곳*/
 select * from rest_area_wifi;
 
 select distinct a.휴게소명
 from rest_area_animal2 a ,rest_area_wifi b
 where a.휴게소명=b.휴게소명;
 
 /*반려동물 놀이터가 있는 휴게소 중 운영시간이 24시간인 곳이 몇 곳*/
  select distinct count(휴게소명)
 from rest_area_animal2
 where 운영시간='24시간';
 
 /*본부별로 와이파이 사용이 가능한 휴게소가 몇군데*/
 select trim(본부) as 본부,count(t.가능여부) as count
 from (
 select distinct 본부,휴게소명,가능여부
 from rest_area_wifi
 where 가능여부='O') t
 group by trim(본부);
 
 
 /*본부별로 와이파이 사용이 가능한 휴게소를 내림차순으로 정렬*/
 select trim(본부) as 본부,count(t.가능여부) as count
 from (
 select distinct 본부,휴게소명,가능여부
 from rest_area_wifi
 where 가능여부='O') t
 group by trim(본부)
 order by count(t.가능여부) desc;
 
 /*본부별로 와이파이 사용이 가능한 휴게소가 25 이상인 본부를 내림차순으로 정렬*/
 select trim(본부) as 본부,count(t.가능여부) as count
 from (
 select distinct 본부,휴게소명,가능여부
 from rest_area_wifi
 where 가능여부='O') t
 group by trim(본부)
 having count(t.가능여부)>=25
 order by count(t.가능여부) desc;
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
